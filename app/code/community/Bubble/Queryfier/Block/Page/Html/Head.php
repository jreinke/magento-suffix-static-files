<?php
/**
 * @category    Bubble
 * @package     Bubble_Queryfier
 * @version     1.0.0
 * @copyright   Copyright (c) 2014 BubbleShop (https://www.bubbleshop.net)
 */
class Bubble_Queryfier_Block_Page_Html_Head extends Mage_Page_Block_Html_Head
{
    protected function &_prepareStaticAndSkinElements($format, array $staticItems, array $skinItems, $mergeCallback = null)
    {
        $designPackage = Mage::getDesign();
        $baseJsUrl = Mage::getBaseUrl('js');
        $items = array();
        if ($mergeCallback && !is_callable($mergeCallback)) {
            $mergeCallback = null;
        }

        // get static files from the js folder, no need in lookups
        foreach ($staticItems as $params => $rows) {
            foreach ($rows as $name) {
                $items[$params][] = $mergeCallback ? Mage::getBaseDir() . DS . 'js' . DS . $name : $baseJsUrl . $name;
            }
        }

        // lookup each file basing on current theme configuration
        foreach ($skinItems as $params => $rows) {
            foreach ($rows as $name) {
                $items[$params][] = $mergeCallback ? $designPackage->getFilename($name, array('_type' => 'skin'))
                    : $designPackage->getSkinUrl($name, array());
            }
        }

        $html = '';
        foreach ($items as $params => $rows) {
            // attempt to merge
            $mergedUrl = false;
            if ($mergeCallback) {
                $mergedUrl = call_user_func($mergeCallback, $rows);
            }
            // render elements
            $params = trim($params);
            $params = $params ? ' ' . $params : '';
            if ($mergedUrl) {
                if ($this->isUrlSuffixEnabled()) {
                    if ($this->isUrlSuffixAutoGenerated()) {
                        $suffix = $this->_getFileModificationTimeFromUrl($mergedUrl);
                    } else {
                        $suffix = $this->getUrlSuffix();
                    }
                    $mergedUrl .= '?q=' . urlencode($suffix);
                }
                $html .= sprintf($format, $mergedUrl, $params);
            } else {
                foreach ($rows as $src) {
                    if ($this->isUrlSuffixEnabled()) {
                        if ($this->isUrlSuffixAutoGenerated()) {
                            $suffix = $this->_getFileModificationTimeFromUrl($src);
                        } else {
                            $suffix = $this->getUrlSuffix();
                        }
                        $src .= '?q=' . urlencode($suffix);
                    }
                    $html .= sprintf($format, $src, $params);
                }
            }
        }
        return $html;
    }

    protected function _getFileModificationTimeFromUrl($url)
    {
        $base_dir = Mage::getBaseDir();
        $base_url = Mage::getBaseUrl();

        if (strpos($url, Mage::getBaseUrl()) === 0) {
            # pass
        } else if (strpos($url, Mage::getBaseUrl('media')) === 0) {
            $base_dir = Mage::getBaseDir('media');
            $base_url = Mage::getBaseUrl('media');
        } else if (strpos($url, Mage::getBaseUrl('skin')) === 0) {
            $base_dir = Mage::getBaseDir('skin');
            $base_url = Mage::getBaseUrl('skin');
        } else if (strpos($url, Mage::getBaseUrl('js')) === 0) {
            $base_dir = Mage::getBaseDir() . DS . 'js';
            $base_url = Mage::getBaseUrl('js');
        }

        $file = $base_dir . DS . trim(str_replace($base_url, '', $url), DS);

        return file_exists($file) ? filemtime($file) : $this->getUrlSuffix();
    }

    public function isUrlSuffixEnabled()
    {
        return Mage::getStoreConfigFlag('bubble_queryfier/suffix_js_css/enable');
    }

    public function isUrlSuffixAutoGenerated()
    {
        return Mage::getStoreConfigFlag('bubble_queryfier/suffix_js_css/auto');
    }

    public function getUrlSuffix()
    {
        return Mage::getStoreConfig('bubble_queryfier/suffix_js_css/suffix');
    }
}
